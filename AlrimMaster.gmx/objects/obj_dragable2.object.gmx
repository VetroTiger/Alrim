<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_draggable_test</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variable Initialization

// variables

image_speed = 0
image_index = 1
chosen = false
gridsize = 32;
movespeed = 8;
ismoving = false;
movetimer = 0;
speedx = 0;
speedy = 0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dragging and Checking for Push

right = keyboard_check_pressed(vk_right)
up = keyboard_check_pressed(vk_up)
left =keyboard_check_pressed(vk_left)
down =keyboard_check_pressed(vk_down)
chosenkey = keyboard_check(vk_enter)
notchosen = keyboard_check_released(vk_enter)

if (place_meeting(x,y,obj_cursor))
{
if chosenkey
    {chosen = true}
}

if (chosen == true)
{
image_index = 1
if ismoving == false
    {
        if down
       {  
        ismoving = true;
        movetimer = gridsize
        speedx = 0;
        speedy = movespeed;
        }
        if up
       {  
        ismoving = true;
        movetimer = gridsize
        speedx = 0;
        speedy = -movespeed;
        }
        if left
       {  
        ismoving = true;
        movetimer = gridsize
        speedx = -movespeed;
        speedy = 0;
        }
        if right
       {  
        ismoving = true;
        movetimer = gridsize
        speedx = movespeed;
        speedy = 0;
        }
    }

if ismoving == true
    {
    x += speedx;
    y += speedy;
    movetimer -= movespeed;
    if movetimer == 0
        {ismoving = false}
    }
if notchosen
    {chosen = false}


    
}
else 
{
image_index = 0
}







</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
